trigger:
  tags:
    include:
    - '1.2.0'
  branches:
    include:
    - 1.2.0
    exclude:
    - main
    - dev

name: $(Date:yyyyMMdd)$(Rev:.r)

jobs:
#- job: linux
#  timeoutInMinutes: '120'
#  pool: {vmImage: 'Ubuntu-latest'}
#  strategy:
#    matrix:
#      # Python38:
#      #   python.version: '3.8'
#      # Python39:
#      #   python.version: '3.9'
#      # Python310:
#      #   python.version: '3.10'
#      # Python311:
#      #   python.version: '3.11'
#      Python312:
#        python.version: '3.12'
#  steps:
#    - task: UsePythonVersion@0
#      inputs:
#        versionSpec: '$(python.version)'
#    - bash: |
#        set -o errexit
#        python3 -m pip install --upgrade pip
#        pip3 install cibuildwheel==2.21.3
#      displayName: Install dependencies
#    - bash: cibuildwheel --output-dir wheelhouse .
#      displayName: Build wheels
#    - script: python -m pip install --upgrade twine
#      displayName: 'Install Twine'
#
#    # Download a secure file to the agent machine
#    #- task: DownloadSecureFile@1
#    #  name: securePyPiRC # The name with which to reference the secure file's path on the agent, like $(mySecureFile.secureFilePath)
#    #  inputs:
#    #    secureFile: .pypirc
#      
#      #- script: python -m twine upload --skip-existing --non-interactive -r pypi --verbose --config-file $(securePyPiRC.secureFilePath) wheelhouse/*
#    - script: |
#        python -m twine upload --skip-existing --non-interactive -r pypi --verbose -u $TWINE_USER -p $PYPI_PASSWD wheelhouse/*
#      displayName: 'Publish to PyPi through Twine'
#      env:
#        TWINE_USER: $(TWINE_USERNAME)
#        PYPI_PASSWD: $(PYPI_UPLOAD_TOKEN)
#
#- job: macos
#  timeoutInMinutes: '120'
#  pool: {vmImage: 'macOS-latest'}
#  strategy:
#    matrix:
#      # Python38:
#      #   python.version: '3.8'
#      # Python39:
#      #   python.version: '3.9'
#      # Python310:
#      #   python.version: '3.10'
#      # Python311:
#      #   python.version: '3.11'
#      Python312:
#        python.version: '3.12'
#  steps:
#    - task: UsePythonVersion@0
#      inputs:
#        versionSpec: '$(python.version)'
#    - bash: |
#        set -o errexit
#        python3 -m pip install --upgrade pip
#        python3 -m pip install cibuildwheel==2.21.3
#      displayName: Install dependencies
#    - bash: cibuildwheel --output-dir wheelhouse .
#      displayName: Build wheels
#
#    - script: python -m pip install --upgrade twine
#      displayName: 'Install Twine'
#
#    # Download a secure file to the agent machine
#    #- task: DownloadSecureFile@1
#      #name: securePyPiRC # The name with which to reference the secure file's path on the agent, like $(mySecureFile.secureFilePath)
#      #inputs:
#        #secureFile: .pypirc
#      
#        #- script: python -m twine upload --skip-existing --non-interactive -r pypi --verbose --config-file $(securePyPiRC.secureFilePath) wheelhouse/*
#    - script: |
#        python -m twine upload --skip-existing --non-interactive -r pypi --verbose -u $TWINE_USER -p $PYPI_PASSWD wheelhouse/*
#      displayName: 'Publish to PyPi through Twine'
#      env:
#        TWINE_USER: $(TWINE_USERNAME)
#        PYPI_PASSWD: $(PYPI_UPLOAD_TOKEN)
#
- job: windows
  timeoutInMinutes: '120'
  pool: {vmImage: 'windows-latest'}
  strategy:
    matrix:
      # Python38:
      #   python.version: '3.8'
      # Python39:
      #   python.version: '3.9'
      # Python310:
      #   python.version: '3.10'
      # Python311:
      #   python.version: '3.11'
      Python312:
        python.version: '3.12'
  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
    - bash: |
        set -o errexit
        python -m pip install --upgrade pip
        pip install cibuildwheel==2.21.3
      displayName: Install dependencies
#    - bash: cibuildwheel --output-dir wheelhouse .
#      displayName: Build wheels
    - script: python -m pip install --upgrade twine
      displayName: 'Install Twine'

    # Download a secure file to the agent machine
    #- task: DownloadSecureFile@1
      #name: securePyPiRC # The name with which to reference the secure file's path on the agent, like $(mySecureFile.secureFilePath)
      #inputs:
        #secureFile: .pypirc
      
        #- script: python -m twine upload --skip-existing --non-interactive -r pypi --verbose --config-file $(securePyPiRC.secureFilePath) wheelhouse/*
    - script: |
        echo "Password: ${PYPI_PASSWD}"
        echo "Password: ${PYPI_PASSWD2}"
        echo "Password: ${env:PYPI_PASSWD}"
        echo "Password: ${env:PYPI_PASSWD2}"
#        python -m twine upload --skip-existing --non-interactive -r pypi --verbose -u ${env:TWINE_USER} -p ${env:PYPI_PASSWD} wheelhouse/*
      displayName: 'Publish to PyPi through Twine'
      env:
        TWINE_USER: $(TWINE_USERNAME)
        PYPI_PASSWD: $(PYPI_UPLOAD_TOKEN)
        PYPI_PASSWD2: ${env:PYPI_UPLOAD_TOKEN}
